project.name=spring-boot-kafka
spring.application.name=kafka
server.port=8080

#============== kafka ===================
kafka.group-id=group1
kafka.consumer.servers=10.65.3.5:9092
#如果此值设置为true，consumer会周期性的把当前消费的offset值保存到zookeeper。当consumer失败重启之后将会使用此值作为新开始消费的值
kafka.consumer.enable-auto-commit=false
#ZooKeeper session 超时时间。如果在此时间内server没有向zookeeper发送心跳，zookeeper就会认为此节点已挂掉。 此值太低导致节点容易被标记死亡；若太高，.会导致太迟发现节点死亡。
kafka.consumer.session-timeout=13000
#kafka.consumer.session.timeout=6000
#Consumer提交offset值到zookeeper的周期。
#kafka.consumer.auto-commit-interval=100
#kafka.consumer.auto.commit.interval=100
#如果卡夫卡没有初始偏移量，或者服务器上当前的偏移量不存在，该怎么处理，latest 最新的
kafka.consumer.auto-offset-reset=earliest
kafka.consumer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.consumer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

kafka.producer.servers=10.65.3.5:9092
kafka.producer.acks=all
#kafka.producer.servers=hadoop1.xqcx.com:9092,hadoop2.xqcx.com:9092,hadoop3.xqcx.com:9092
kafka.producer.retries=0
kafka.producer.batch-size=4096
kafka.producer.linger=1
#缓冲区大小
kafka.producer.buffer-memory=40960
kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

kafka.topic=HelloWorld